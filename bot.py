from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
)
from db import (
    add_message,
    like_message,
    count_likes,
    get_week_stats,
    add_user_if_not_exists, get_least_active_user, reset_database, get_messages_count, get_all_messages,
)

from db import get_all_users_with_messages, delete_user_by_username
from telegram.ext import ContextTypes
from scheduler import start_scheduler
import re
from db import add_point, remove_point, get_user_id_by_username
from db import get_top_popush

TOKEN = "8264220267:AAGNQ6MQ6HVOSetwjwWAarDviIhOjC_9J0Q"
ADMIN_ID = 772078520

def admin_only(func):
    async def wrapper(update: Update, context: ContextTypes.DEFAULT_TYPE):
        user_id = update.effective_user.id
        if user_id != ADMIN_ID:
            await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return
        return await func(update, context)
    return wrapper

async def on_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message or not update.message.text:
        return

    user = update.message.from_user
    add_message(user.id, user.username or "anon")

    text = update.message.text.lower()

    if "–∏—Ç–æ–≥–∏" in text:
        await show_weekly_stats(update)
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç: "–æ—á–∫–æ –ø–æ–ø—É—â–µ–Ω–Ω–æ—Å—Ç–∏ + @username"
    match = re.search(r'–æ—á–∫–æ –ø–æ–ø—É—â–µ–Ω–Ω–æ—Å—Ç–∏\s*\+?\s*@?(\w+)', text)
    if not match:
        return

    mentioned_username = match.group(1)

    # –ò—â–µ–º user_id –≤ –±–∞–∑–µ –ø–æ username
    target_id = get_user_id_by_username(mentioned_username)
    if not target_id:
        await update.message.reply_text(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{mentioned_username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—Ç–∞–≤–∏–ª –ª–∏ –ª–∞–π–∫ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    message_id = update.message.message_id
    liker_id = user.id

    if like_message(message_id, target_id, liker_id):
        like_count = count_likes(message_id)
        if like_count >= 2:
            add_point(target_id, mentioned_username)
            await update.message.reply_text(f"@{mentioned_username} –ø–æ–ª—É—á–∞–µ—Ç –æ—á–∫–æ –ø–æ–ø—É—â–µ–Ω–Ω–æ—Å—Ç–∏!")
        else:
            await update.message.reply_text(f"–õ–∞–π–∫ –∑–∞—Å—á–∏—Ç–∞–Ω! –°–µ–π—á–∞—Å —É —Å–æ–æ–±—â–µ–Ω–∏—è {like_count} –ª–∞–π–∫–æ–≤.")
    else:
        await update.message.reply_text("–¢—ã —É–∂–µ –ª–∞–π–∫–∞–ª —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.")

async def show_weekly_stats(update: Update):
    stats = get_week_stats()
    if not stats:
        await update.message.reply_text("–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –ø–æ–∫–∞ –Ω–µ—Ç –æ—á–∫–æ–≤ –ø–æ–ø—É—â–µ–Ω–Ω–æ—Å—Ç–∏.")
        return

    msg = "üèÜ –û—á–∫–∏ –ø–æ–ø—É—â–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é:\n"
    for user, points in stats:
        msg += f"@{user} ‚Äî {points} –æ—á–∫.\n"
    top = get_top_popush()
    if top:
        msg += f"\nü§° –ü–æ–ø—É—Å–∫ –Ω–µ–¥–µ–ª–∏: @{top}"
    await update.message.reply_text(msg)

async def command_stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    users = get_all_users_with_messages()
    if not users:
        await update.message.reply_text("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –µ—â—ë –Ω–µ—Ç.")
        return

    msg = "üìã –û—á–∫–∏ –ø–æ–ø—É—â–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:\n"
    for username, points, messages in users:
        msg += f"@{username or '–ë–µ–∑_–∏–º–µ–Ω–∏'} ‚Äî {points} –æ—á–∫.\n"
    await update.message.reply_text(msg)

async def command_add_new_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    user_id = user.id
    username = user.username or f"{user.first_name}_{user_id}"

    if add_user_if_not_exists(user_id, username):
        await update.message.reply_text("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")
    else:
        await update.message.reply_text("‚ÑπÔ∏è –í—ã —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")

async def top_popysk_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    top_user = get_top_popush()
    if top_user:
        await update.message.reply_text(f"ü§° –ü–æ–ø—É—Å–∫ –Ω–µ–¥–µ–ª–∏: @{top_user}")
    else:
        await update.message.reply_text("–ü–æ–∫–∞ –Ω–µ—Ç –æ—á–∫–æ–≤ –ø–æ–ø—É—â–µ–Ω–Ω–æ—Å—Ç–∏.")

async def all_messages_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    users = get_all_messages()
    if not users:
        await update.message.reply_text("üì≠ –ü–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        return

    message = "üì® *–í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤—Å–µ–≥–æ):*\n\n"
    for i, (username, count) in enumerate(users, start=1):
        message += f"{i}. @{username} ‚Äî {count} —Å–æ–æ–±—â–µ–Ω–∏–π\n"

    await update.message.reply_text(message, parse_mode='Markdown')

@admin_only
async def command_delete_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç (username)
    if not context.args:
        await update.message.reply_text("‚ùóÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /deleteuser username")
        return

    username = context.args[0].lstrip('@')  # –£–±–∏—Ä–∞–µ–º @, –µ—Å–ª–∏ –µ—Å—Ç—å

    delete_user_by_username(username)
    await update.message.reply_text(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} —É–¥–∞–ª—ë–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –æ–Ω —Ç–∞–º –±—ã–ª).")

@admin_only
async def add_point_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ username. –ü—Ä–∏–º–µ—Ä: /AddPointPoPysk @username")
        return

    username = context.args[0].lstrip('@')
    user_id = get_user_id_by_username(username)
    if not user_id:
        await update.message.reply_text(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.")
        return

    add_point(user_id, username)
    await update.message.reply_text(f"–û—á–∫–æ –ø–æ–ø—É—â–µ–Ω–Ω–æ—Å—Ç–∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ @{username}.")

@admin_only
async def remove_point_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ username. –ü—Ä–∏–º–µ—Ä: /RemovePointPoPysk @username")
        return

    username = context.args[0].lstrip('@')
    user_id = get_user_id_by_username(username)
    if not user_id:
        await update.message.reply_text(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.")
        return

    remove_point(user_id)
    await update.message.reply_text(f"–û—á–∫–æ –ø–æ–ø—É—â–µ–Ω–Ω–æ—Å—Ç–∏ —É–±—Ä–∞–Ω–æ —É @{username}.")

async def not_active_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = get_least_active_user()  # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∏–∑ —Ç–≤–æ–µ–≥–æ db.py, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç (user_id, username)
    if user:
        user_id, username = user
        await update.message.reply_text(f"üò¥ –°–∞–º—ã–π –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {get_messages_count(user_id)}")
    else:
        await update.message.reply_text("–ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")



async def reset_db_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user

    # (–ø–æ –∂–µ–ª–∞–Ω–∏—é) –û–≥—Ä–∞–Ω–∏—á—å –¥–æ—Å—Ç—É–ø, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É
    if user.id != ADMIN_ID:  # ‚Üê —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å —Å–≤–æ–π user_id
        await update.message.reply_text("‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    reset_database()
    await update.message.reply_text("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω–∞!")


async def command_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_text = (
        "üìã *–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:*\n\n"

        "üßæ `/stats` ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –æ—á–∫–∏ –ø–æ–ø—É—â–µ–Ω–Ω–æ—Å—Ç–∏.\n"
        "üì® `/AllMessages` ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n\n"

        "‚ûï `/AddNewUserSVO` ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —Å–µ–±—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞.\n"
        "‚ùå `/deleteuser` ‚Äî —É–¥–∞–ª–∏—Ç—å —Å–µ–±—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.\n\n"

        "üèÖ `/AddPointPoPysk @username` ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –æ—á–∫–æ –ø–æ–ø—É—â–µ–Ω–Ω–æ—Å—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.\n"
        "‚Ü©Ô∏è `/RemovePointPoPysk @username` ‚Äî —É–±—Ä–∞—Ç—å –æ—á–∫–æ –ø–æ–ø—É—â–µ–Ω–Ω–æ—Å—Ç–∏ —É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n\n"

        "üëë `/TopPoPysk` ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º —á–∏—Å–ª–æ–º –æ—á–∫–æ–≤ –ø–æ–ø—É—â–µ–Ω–Ω–æ—Å—Ç–∏.\n"
        "üò¥ `/NotActive` ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–∞–º–æ–≥–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–æ–æ–±—â–µ–Ω–∏–π.\n\n"

        "üîÅ `/ResetDB` ‚Äî *—Å–±—Ä–æ—Å–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö* (–æ—á–∫–∏, —Å–æ–æ–±—â–µ–Ω–∏—è, –ª–∞–π–∫–∏). –¢–æ–ª—å–∫–æ –¥–ª—è –°–∞–Ω–µ—á–∫–∏.\n\n"

        "‚ÑπÔ∏è –î–ª—è –∫–æ–º–∞–Ω–¥ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç:\n"
        "`/AddPointPoPysk @username`\n"
        "`/RemovePointPoPysk @username`"
    )
    await update.message.reply_text(help_text, parse_mode='Markdown')



def run():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, on_message))
    app.add_handler(CommandHandler("stats", command_stats))
    app.add_handler(CommandHandler("AddNewUserSVO", command_add_new_user))
    app.add_handler(CommandHandler("deleteuser", command_delete_user))
    app.add_handler(CommandHandler("AddPointPoPysk", add_point_command))
    app.add_handler(CommandHandler("RemovePointPoPysk", remove_point_command))
    app.add_handler(CommandHandler("TopPoPysk", top_popysk_command))
    app.add_handler(CommandHandler("NotActive", not_active_command))
    app.add_handler(CommandHandler("ResetDB", reset_db_command))
    app.add_handler(CommandHandler("AllMessages", all_messages_command))
    app.add_handler(CommandHandler("help", command_help))

    start_scheduler(app)

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

if __name__ == "__main__":
    run()
